[{"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/index.js":"1","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/App.js":"2","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/store.js":"3","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/index.js":"4","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/components/toolbar.jsx":"5","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/index.js":"6","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/index.js":"7","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/helpers/index.js":"8","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/multi-dispatch/index.js":"9","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/module1/index.js":"10","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/error/index.js":"11","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/View.jsx":"12","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/epics.js":"13","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/module1/types.js":"14","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/module1/index.js":"15","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/error/types.js":"16","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/index.js":"17","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/module1/index.js":"18","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/ui/index.js":"19","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/ui/index.js":"20","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/types.js":"21","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/helpers.js":"22","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/helpers/index.js":"23","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/error/index.js":"24","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/ui/types.js":"25","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/helpers/staticProps.js":"26","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/registerSW.js":"27","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/serviceWorkerRegistration.js":"28"},{"size":861,"mtime":1610224195589,"results":"29","hashOfConfig":"30"},{"size":868,"mtime":1610132106778,"results":"31","hashOfConfig":"30"},{"size":891,"mtime":1610132106790,"results":"32","hashOfConfig":"30"},{"size":501,"mtime":1610132106780,"results":"33","hashOfConfig":"30"},{"size":155,"mtime":1610132106779,"results":"34","hashOfConfig":"30"},{"size":347,"mtime":1610132106785,"results":"35","hashOfConfig":"30"},{"size":152,"mtime":1610132106788,"results":"36","hashOfConfig":"30"},{"size":396,"mtime":1610132106780,"results":"37","hashOfConfig":"30"},{"size":184,"mtime":1610132106788,"results":"38","hashOfConfig":"30"},{"size":1154,"mtime":1610132106787,"results":"39","hashOfConfig":"30"},{"size":259,"mtime":1610132106787,"results":"40","hashOfConfig":"30"},{"size":1270,"mtime":1610132106779,"results":"41","hashOfConfig":"30"},{"size":3670,"mtime":1610132106782,"results":"42","hashOfConfig":"30"},{"size":317,"mtime":1610132106785,"results":"43","hashOfConfig":"30"},{"size":410,"mtime":1610132106785,"results":"44","hashOfConfig":"30"},{"size":43,"mtime":1610132106784,"results":"45","hashOfConfig":"30"},{"size":152,"mtime":1610132106783,"results":"46","hashOfConfig":"30"},{"size":578,"mtime":1610132106789,"results":"47","hashOfConfig":"30"},{"size":491,"mtime":1610132106789,"results":"48","hashOfConfig":"30"},{"size":199,"mtime":1610132106786,"results":"49","hashOfConfig":"30"},{"size":346,"mtime":1610132106783,"results":"50","hashOfConfig":"30"},{"size":286,"mtime":1610132106782,"results":"51","hashOfConfig":"30"},{"size":94,"mtime":1610132106779,"results":"52","hashOfConfig":"30"},{"size":138,"mtime":1610132106784,"results":"53","hashOfConfig":"30"},{"size":97,"mtime":1610132106786,"results":"54","hashOfConfig":"30"},{"size":249,"mtime":1610132106779,"results":"55","hashOfConfig":"30"},{"size":1473,"mtime":1610218625670,"results":"56","hashOfConfig":"30"},{"size":5442,"mtime":1610297557996,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1cmp1vg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/index.js",[],["118","119"],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/App.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/store.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/components/toolbar.jsx",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/helpers/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/multi-dispatch/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/module1/index.js",["120"],"import { getRequestEpic } from \"../../actions/api\";\nimport {\n  getModule1,\n  getModule1Success,\n  getModule1Cancel,\n} from \"../../actions/module1\";\n\nimport * as TYPE from \"../../actions/module1/types\";\nimport { url } from \"../../../helpers\";\nimport { showSpinner, hideSpinner } from \"../../actions/ui\";\n\nconst getSampleModuleFlow = ({ dispatch }) => (next) => (action) => {\n  next(action);\n\n  if (action.type === TYPE.GET_MODULE_1_EPIC) {\n    dispatch([\n      showSpinner(),\n      getRequestEpic({\n        url: url.posts,\n        body: null,\n        onCancel: getModule1Cancel,\n        onSuccess: getModule1Success,\n      }),\n    ]);\n  }\n};\n\nconst getSampleModuleSuccessFlow = ({ dispatch }) => (next) => (action) => {\n  next(action);\n\n  if (action.type === TYPE.GET_MODULE_1_SUCCESS) {\n    dispatch([getModule1(action.payload), hideSpinner()]);\n  }\n};\n\nconst getSampleModuleSuccessCancelFlow = ({ dispatch }) => (next) => (\n  action\n) => {\n  next(action);\n\n  if (action.type === TYPE.GET_MODULE_1_CANCEL) {\n    dispatch(hideSpinner());\n  }\n};\n\nexport default [\n  getSampleModuleFlow,\n  getSampleModuleSuccessFlow,\n  getSampleModuleSuccessCancelFlow,\n];\n","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/middleware/error/index.js",["121"],"import * as TYPE from \"../../actions/error/types\";\n\nconst onErrorApi = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type === TYPE.ON_ERROR_API) {\n    console.error(\"error\", action.payload, dispatch);\n  }\n};\n\nexport default [onErrorApi];","/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/View.jsx",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/epics.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/module1/types.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/module1/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/error/types.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/module1/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/reducers/ui/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/ui/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/types.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/api/helpers.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/helpers/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/error/index.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/redux/actions/ui/types.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/containers/module1/helpers/staticProps.js",[],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/registerSW.js",["122"],"/Users/upsk/Desktop/REDUX-OBSERVABLE-APP/src/serviceWorkerRegistration.js",["123"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n\n          let deferredPrompt;\n\n          window.addEventListener(\"beforeinstallprompt\", (e) => {\n            // Prevent the mini-infobar from appearing on mobile\n            // e.preventDefault();\n            // Stash the event so it can be triggered later.\n            deferredPrompt = e;\n            console.log(\"ready to install\");\n          });\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":46,"column":1,"nodeType":"130","endLine":50,"endColumn":3},{"ruleId":"128","severity":1,"message":"129","line":11,"column":1,"nodeType":"130","endLine":11,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":28,"column":7,"nodeType":"133","messageId":"134","endLine":28,"endColumn":15},{"ruleId":"131","severity":1,"message":"135","line":55,"column":13,"nodeType":"133","messageId":"134","endLine":55,"endColumn":27},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'svworker' is assigned a value but never used.","Identifier","unusedVar","'deferredPrompt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]